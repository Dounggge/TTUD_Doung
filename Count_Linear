#include <bits/stdc++.h>
using namespace std;

int n, M; // value M
vector<int> a; // coefficients a1, a2, ..., an
int countSol = 0; // counting

void backtrack(int k, int currentSum)
{
    if (k == n) {
        // check sum = M
        if (currentSum == M)
            countSol++;
        return;
    }

    // limiting Xk
    int maxValue = (M - currentSum) / a[k];

    // Xk is from 0 to maxValue
    for (int xk = 1; xk <= maxValue; ++xk) {
        backtrack(k + 1, currentSum + a[k] * xk);
    }
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    cin >> n >> M;
    a.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];

    backtrack(0, 0);

    cout << countSol << '\n';
    return 0;
}
